-- Ingresar datos para ELEMENT
-- INSERT INTO "ELEMENT" ("ELE_CDESCRIPTION") VALUES ('lentes'), ('casco'), ('chaleco');
-- Ingresar 5 ubicaciones distintas
-- INSERT INTO "LOCATION" ("LOC_CDESCRIPTION") VALUES ('Ubicación 1'), ('Ubicación 2'), ('Ubicación 3'), ('Ubicación 4'), ('Ubicación 5');
-- Ingresar 10 zonas distintas
-- INSERT INTO "ZONE" ("Z_CDESCRIPTION") VALUES ('Poste'), ('Entrada'), ('Área de carga'), ('Patio'), ('Pasillo'), ('Oficina'), ('Escaleras'), ('Sala de reuniones'), ('Almacén'), ('Estacionamiento');
-- Ingresar 1 tipo de dispositivo "cámara"
-- INSERT INTO "DEVICE_TYPE" ("DT_CNAME") VALUES ('Cámara');

-- CREATE SEQUENCE device_sequence;

-- Ingresar 10 datos para DEVICE
-- WITH random_locations AS (
--     SELECT "LOC_NID" FROM "LOCATION" ORDER BY RANDOM() LIMIT 10
-- ), random_zones AS (
--     SELECT "Z_NID" FROM "ZONE" ORDER BY RANDOM() LIMIT 10
-- )
-- INSERT INTO "DEVICE" ("DEV_CBRAND", "DEV_CMODEL", "DEV_NLOCATION_id", "DEV_NZONE_id", "DEV_CDEVICE_CODE", "DEV_NDEVICE_TYPE_id")
-- SELECT 
--     'Marca ' || gs.i,
--     'Modelo ' || gs.i,
--     rl."LOC_NID",
--     rz."Z_NID",
--     'DEV_' || gs.i || '_' || NEXTVAL('device_sequence'), -- Aquí se agrega un sufijo incremental único
--     (SELECT "DT_NID" FROM "DEVICE_TYPE" WHERE "DT_CNAME" = 'Cámara')
-- FROM 
--     generate_series(1, 10) AS gs(i)
-- JOIN 
--     random_locations rl ON true
-- JOIN 
--     random_zones rz ON true;

-- SELECT * FROM "DEVICE"

-- Ingresar 20 registros para SENSOR_EPP
-- WITH random_devices AS (
--     SELECT "DEV_NID" FROM "DEVICE" ORDER BY RANDOM() LIMIT 20
-- )
-- INSERT INTO "SENSOR_EPP" ("SEN_DETECTION_DATE", "SEN_NSTATUS", "SEN_NDEVICE_id", "SEN_CELEMENT_CODE_1", "SEN_CELEMENT_CODE_2", "SEN_CELEMENT_CODE_3", "SEN_CELEMENT_CODE_4", "SEN_CEVIDENCE")
-- SELECT 
--     NOW() - (random() * interval '30 days'),  -- Se resta un intervalo aleatorio para obtener fechas distintas
--     i % 2 = 0,
--     rd."DEV_NID",
--     (SELECT "ELE_CDESCRIPTION" FROM "ELEMENT" ORDER BY RANDOM() LIMIT 1),
--     (SELECT "ELE_CDESCRIPTION" FROM "ELEMENT" ORDER BY RANDOM() LIMIT 1),
--     (SELECT "ELE_CDESCRIPTION" FROM "ELEMENT" ORDER BY RANDOM() LIMIT 1),
--     (SELECT "ELE_CDESCRIPTION" FROM "ELEMENT" ORDER BY RANDOM() LIMIT 1),
--     'http://example.com/evidence_' || i || '.jpg'
-- FROM 
--     generate_series(1, 20) AS gs(i)
-- JOIN 
--     random_devices rd ON true;
-- DELETE FROM "SENSOR_EPP";

-- SELECT * FROM "SENSOR_EPP"

-- Ingresar 20 registros para SENSOR_EPP
-- WITH random_devices AS (
--     SELECT "DEV_NID" FROM "DEVICE" ORDER BY RANDOM() LIMIT 20
-- ), random_elements AS (
--     SELECT "ELE_NID" FROM "ELEMENT" ORDER BY RANDOM() -- Obtener IDs de elementos en orden aleatorio
-- )
-- INSERT INTO "SENSOR_EPP" ("SEN_DETECTION_DATE", "SEN_NSTATUS", "SEN_NDEVICE_id", "SEN_CELEMENT_CODE_1", "SEN_CELEMENT_CODE_2", "SEN_CELEMENT_CODE_3", "SEN_CELEMENT_CODE_4", "SEN_CEVIDENCE")
-- SELECT 
--     NOW() - (random() * interval '30 days'),  -- Se resta un intervalo aleatorio para obtener fechas distintas
--     i % 2 = 0,
--     rd."DEV_NID",
--     CASE WHEN i % 2 = 0 THEN NULL ELSE (SELECT "ELE_NID" FROM random_elements LIMIT 1) END AS "SEN_CELEMENT_CODE_1",
--     CASE WHEN i % 2 = 0 THEN NULL ELSE (SELECT "ELE_NID" FROM random_elements LIMIT 1 OFFSET 1) END AS "SEN_CELEMENT_CODE_2",
--     CASE WHEN i % 2 = 0 THEN NULL ELSE (SELECT "ELE_NID" FROM random_elements LIMIT 1 OFFSET 2) END AS "SEN_CELEMENT_CODE_3",
--     CASE WHEN i % 2 = 0 THEN NULL ELSE (SELECT "ELE_NID" FROM random_elements LIMIT 1 OFFSET 3) END AS "SEN_CELEMENT_CODE_4",
--     'http://example.com/evidence_' || i || '.jpg'
-- FROM 
--     generate_series(1, 20) AS gs(i)
-- JOIN 
--     random_devices rd ON true;
SELECT * FROM "LOCATION"

